@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
:root {
  --radio-dot-svg: url('data:image/svg+xml,%3csvg viewBox=%270 0 16 16%27 fill=%27rgb(17,20,24)%27 xmlns=%27http://www.w3.org/2000/svg%27%3e%3ccircle cx=%278%27 cy=%278%27 r=%273%27/%3e%3c/svg%3e');
  --select-button-svg: url('data:image/svg+xml,%3csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%2724px%27 height=%2724px%27 fill=%27rgb(96,117,138)%27 viewBox=%270 0 256 256%27%3e%3cpath d=%27M181.66,170.34a8,8,0,0,1,0,11.32l-48,48a8,8,0,0,1-11.32,0l-48-48a8,8,0,0,1,11.32-11.32L128,212.69l42.34-42.35A8,8,0,0,1,181.66,170.34Zm-96-84.68L128,43.31l42.34,42.35a8,8,0,0,0,11.32-11.32l-48-48a8,8,0,0,0-11.32,0l-48,48A8,8,0,0,0,85.66,85.66Z%27%3e%3c/path%3e%3c/svg%3e');
  }
}

@layer utilities {
  .animate-scroll {
    animation: scroll var(--animation-duration, 40s) var(--animation-direction, forwards) linear infinite;
  }
  @keyframes scroll {
    to {
      transform: translate(calc(-50% - 0.5rem)); /* 0.5rem is half the gap */
    }
  }
}

body {
  font-family: Inter, "Noto Sans", sans-serif;
  margin: 0;
  padding: 0;
}

.form-input {
  background-image: var(--select-button-svg);
  background-position: right 15px center;
  background-repeat: no-repeat;
  background-size: 20px;
}

input[type="radio"] {
  background-image: var(--radio-dot-svg);
  background-size: 16px;
  background-position: center;
}

input[type="radio"]:checked {
  background-color: #111418;
  border-color: #111418;
}

/* Remove black outline from all form elements */
input, select, textarea, button {
  outline: none !important;
  box-shadow: none !important;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;
}

input:focus, select:focus, textarea:focus, button:focus {
  outline: none !important;
  box-shadow: none !important;
}

/* Prevent dragging on buttons */
button {
  touch-action: manipulation;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
}

/* Prevent text selection on buttons */
button * {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  pointer-events: auto;
}

/* Prevent mobile zoom on input focus by ensuring minimum 16px font size on mobile */
@media (max-width: 640px) {
  input[type="text"],
  input[type="email"], 
  input[type="password"],
  input[type="search"],
  input[type="tel"],
  input[type="url"],
  input[type="number"],
  textarea,
  select {
    font-size: 16px !important;
  }
}

/* Global Scrollbar Styling */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: #f1f5f9;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb {
  background: #cbd5e1;
  border-radius: 4px;
  border: 1px solid #e2e8f0;
}

::-webkit-scrollbar-thumb:hover {
  background: #94a3b8;
}

::-webkit-scrollbar-corner {
  background: #f1f5f9;
}

/* Dark Mode Scrollbar Styling */
.dark ::-webkit-scrollbar-track {
  background: #0a0f1e;
}

.dark ::-webkit-scrollbar-thumb {
  background: #38bdf8;
  border: 1px solid #1e293b;
}

.dark ::-webkit-scrollbar-thumb:hover {
  background: #0ea5e9;
}

.dark ::-webkit-scrollbar-corner {
  background: #0a0f1e;
}

/* Firefox Scrollbar Support */
* {
  scrollbar-width: thin;
  scrollbar-color: #cbd5e1 #f1f5f9;
}

.dark * {
  scrollbar-color: #38bdf8 #0a0f1e;
}

/* Quiz Navigation Styles - NO HOVER EFFECTS */
.question-box {
  width: 40px;
  height: 40px;
  border: 2px solid #e5e7eb;
  background-color: #f9fafb;
  color: #374151;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  font-size: 14px;
  font-weight: 500;
  position: relative;
}

/* COMPLETELY DISABLE ALL HOVER/FOCUS/ACTIVE EFFECTS */
.question-box:hover,
.question-box:focus,
.question-box:active,
.question-box:focus-visible,
.question-box:focus-within {
  border-color: #e5e7eb !important;
  background-color: #f9fafb !important;
  color: #374151 !important;
  transform: none !important;
  box-shadow: none !important;
  outline: none !important;
}

/* Current question - same colors as unanswered, only arrow indicator */
.question-box.current {
  border-color: #e5e7eb;
  background-color: #f9fafb;
  color: #374151;
}

.question-box.current:hover,
.question-box.current:focus,
.question-box.current:active,
.question-box.current:focus-visible {
  border-color: #e5e7eb !important;
  background-color: #f9fafb !important;
  color: #374151 !important;
}

/* Answered questions - blue background */
.question-box.answered {
  border-color: #3b82f6;
  background-color: #3b82f6;
  color: white;
}

.question-box.answered:hover,
.question-box.answered:focus,
.question-box.answered:active,
.question-box.answered:focus-visible {
  border-color: #3b82f6 !important;
  background-color: #3b82f6 !important;
  color: white !important;
}

/* Flagged questions - only apply to unanswered, non-current questions */
.question-box.flagged:not(.answered):not(.current) {
  border-color: #e5e7eb;
  background-color: #f9fafb;
  color: #374151;
}

/* Flagged + Answered combination - Higher specificity */
.question-box.answered.flagged {
  border-color: #3b82f6 !important;
  background-color: #3b82f6 !important;
  color: white !important;
}

/* Flagged + Current combination - same as current, just adds flag */
.question-box.current.flagged {
  border-color: #e5e7eb;
  background-color: #f9fafb;
  color: #374151;
}

/* Dark mode styles */
.dark .question-box {
  border-color: #4b5563;
  background-color: #374151;
  color: #d1d5db;
}

.dark .question-box:hover,
.dark .question-box:focus,
.dark .question-box:active,
.dark .question-box:focus-visible,
.dark .question-box:focus-within {
  border-color: #4b5563 !important;
  background-color: #374151 !important;
  color: #d1d5db !important;
  transform: none !important;
  box-shadow: none !important;
  outline: none !important;
}

.dark .question-box.current {
  border-color: #4b5563;
  background-color: #374151;
  color: #d1d5db;
}

.dark .question-box.current:hover,
.dark .question-box.current:focus,
.dark .question-box.current:active,
.dark .question-box.current:focus-visible {
  border-color: #4b5563 !important;
  background-color: #374151 !important;
  color: #d1d5db !important;
}

.dark .question-box.answered {
  border-color: #2563eb;
  background-color: #2563eb;
  color: white;
}

.dark .question-box.answered:hover,
.dark .question-box.answered:focus,
.dark .question-box.answered:active,
.dark .question-box.answered:focus-visible {
  border-color: #2563eb !important;
  background-color: #2563eb !important;
  color: white !important;
}

.dark .question-box.flagged:not(.answered):not(.current) {
  border-color: #4b5563;
  background-color: #374151;
  color: #d1d5db;
}

.dark .question-box.answered.flagged {
  border-color: #2563eb !important;
  background-color: #2563eb !important;
  color: white !important;
}

.dark .question-box.current.flagged {
  border-color: #4b5563;
  background-color: #374151;
  color: #d1d5db;
}

/* Footer link color fix for light mode */
footer a {
  color: rgba(71,85,105,0.7);
  transition: color 0.2s;
}
footer a:hover {
  color: #2563eb;
}

.dark footer a {
  color: rgba(255,255,255,0.7);
}
.dark footer a:hover {
  color: #38bdf8;
}

/* =========================
   Mobile Viewport Height Fix
   Ensures content fits within the visible viewport on small screens where
   100vh may exceed the available space because of browser UI chrome.
   We override Tailwind's h-screen / min-h-screen to use the newer `dvh` unit
   (dynamic viewport height) when it is supported.
   ========================= */

/* Root element takes full dynamic viewport height */
@supports (height: 100dvh) {
  html,
  body,
  #root {
    min-height: 100dvh !important;
    height: 100dvh !important;
  }
}

/* MOBILE SCROLLING FIX - Force proper overflow behavior on mobile */
@media (max-width: 640px) {
  /* Force all containers to allow scrolling */
  body,
  #root,
  .h-screen,
  .min-h-screen,
  .h-full,
  .min-h-full,
  .overflow-hidden,
  [class*="h-screen"],
  [class*="min-h-screen"],
  [class*="h-full"],
  [class*="overflow-hidden"],
  div[class*="h-screen"],
  div[class*="min-h-screen"],
  div[class*="h-full"],
  div[class*="overflow-hidden"],
  .fixed,
  [class*="fixed"],
  div[class*="inset-0"] {
    height: auto !important;
    min-height: auto !important;
    max-height: none !important;
    overflow: visible !important;
    overflow-y: auto !important;
  }
  
  /* Force flex containers to allow natural height */
  .flex-1,
  [class*="flex-1"],
  .flex,
  [class*="flex"] {
    height: auto !important;
    min-height: auto !important;
    max-height: none !important;
    flex-shrink: 0 !important;
  }
  
  /* Ensure main app containers allow scrolling */
  [class*="SidebarLayout"],
  [class*="Dashboard"] {
    height: auto !important;
    min-height: 100vh !important;
    overflow: visible !important;
  }
  
  /* Force page content areas to be scrollable - but not interactive components */
  div[class*="overflow-hidden"]:not([class*="FAQ"]):not([class*="faq"]):not([class*="accordion"]):not([class*="transition"]):not(.faq-accordion-content),
  section[class*="overflow-hidden"]:not([class*="FAQ"]):not([class*="faq"]):not([class*="accordion"]):not([class*="transition"]):not(.faq-accordion-content) {
    overflow: visible !important;
    overflow-y: auto !important;
  }
  
  /* Add safe area for mobile bottom navigation */
  body {
    padding-bottom: 100px !important;
  }
  
  @supports (height: 100dvh) {
    .h-screen,
    .min-h-screen,
    /* Target specific containers that might be using fixed heights */
    [class*="h-screen"],
    [class*="min-h-screen"],
    /* Target the main app containers */
    div[class*="h-screen"],
    div[class*="min-h-screen"],
    /* Target fixed positioning that might affect height */
    .fixed,
    [class*="fixed"],
    /* Target specific layout containers */
    div[class*="inset-0"] {
      height: auto !important;
      min-height: auto !important;
      max-height: none !important;
    }
    
    /* Ensure overflow is handled properly on mobile */
    body,
    #root {
      overflow: visible !important;
      overflow-y: auto !important;
    }
    
    /* Fix for any flex containers that might be stretching beyond viewport */
    .flex-1,
    [class*="flex-1"] {
      max-height: none !important;
      height: auto !important;
    }
  }
}

/* Mobile Menu Animation */
@keyframes fade-in {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in {
  animation: fade-in 0.2s ease-out;
}

/* FAQ Accordion - Force proper behavior on all screen sizes */
.faq-accordion-content {
  overflow: hidden !important;
  transition: max-height 0.3s ease-out, padding 0.3s ease-out !important;
}

.faq-accordion-content.max-h-0 {
  max-height: 0 !important;
  padding-top: 0 !important;
  padding-bottom: 0 !important;
  overflow: hidden !important;
}

/* Ensure FAQ accordion works on mobile */
@media (max-width: 640px) {
  .faq-accordion-content {
    overflow: hidden !important;
    transition: max-height 0.3s ease-out, padding 0.3s ease-out !important;
  }
  
  .faq-accordion-content.max-h-0 {
    max-height: 0 !important;
    padding-top: 0 !important;
    padding-bottom: 0 !important;
    overflow: hidden !important;
  }
} 